name: Build Linux package

on:
  workflow_dispatch:
  push:
    tags: ['v*']

jobs:
  linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Temurin 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '17'
        cache: maven

    # ── 1. build fat-jar ──────────────────────────────────
    - name: Build fat JAR
      run: mvn -B clean package -DskipTests

    # ── 2. grab JavaFX JMODs ─────────────────────────────
    - name: Download JavaFX 17 JMODs
      env:
        JFX_VERSION: 17.0.15
      run: |
        curl -L -o jfx-jmods.zip \
             https://download2.gluonhq.com/openjfx/${JFX_VERSION}/openjfx-${JFX_VERSION}_linux-x64_bin-jmods.zip
        unzip -q jfx-jmods.zip
        echo "JAVAFX_JMODS=$PWD/javafx-jmods-${JFX_VERSION}" >>"$GITHUB_ENV"

    # ── 3. create self-contained image ───────────────────
    - name: Package with jpackage (auto-detect modules)
      run: |
        JAR_PATH=$(find target -maxdepth 1 -type f -name '*.jar' ! -name '*sources.jar' | head -n1)
        [ -n "$JAR_PATH" ] || { echo "::error ::No JAR found"; exit 1; }

        # Ask jdeps which JDK modules the jar uses
        MODULES=$(jdeps --print-module-deps --ignore-missing-deps "$JAR_PATH")
        echo "Detected JDK modules: $MODULES"

        jpackage \
          --dest dist \
          --type app-image \
          --name PasswordManager \
          --input target \
          --main-jar "$(basename "$JAR_PATH")" \
          --module-path "$JAVAFX_JMODS" \
          --add-modules "$MODULES,javafx.controls,javafx.fxml"

        tar -C dist -czf dist/PasswordManager-linux-x64.tgz PasswordManager

    # ── 4. upload so you can download it ─────────────────
    - uses: actions/upload-artifact@v4
      with:
        name: passwordmanager-linux-x64
        path: dist/PasswordManager-linux-x64.tgz
