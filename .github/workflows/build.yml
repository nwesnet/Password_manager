# File: .github/workflows/linux-package.yml
name: Build Linux package

on:
  # build manually or every time you create a tag that looks like v1.2.3
  workflow_dispatch:
  push:
    tags:    ['v*']

jobs:
  linux:
    runs-on: ubuntu-latest

    steps:
      # 1) checkout sources
      - uses: actions/checkout@v4

      # 2) JDK 17 (contains jpackage)
      - name: Set up Temurin 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven  # change to “gradle” if you use Gradle

      # 3) build a fat-/uber-jar that already has *your* dependencies
      #    – adjust the command if you use Gradle or another tool
      - name: Build runnable JAR
        run: mvn -B clean package -DskipTests

      # 4) grab the same JavaFX SDK you referenced locally
      - name: Download JavaFX 17 SDK
        env:
          JFX_VERSION: 17.0.15          # keep this in sync with your script
        run: |
          curl -L -o javafx.zip https://download2.gluonhq.com/openjfx/${JFX_VERSION}/openjfx-${JFX_VERSION}_linux-x64_bin-sdk.zip
          unzip -q javafx.zip
          echo "JAVAFX_SDK=$PWD/javafx-sdk-${JFX_VERSION}" >>"$GITHUB_ENV"

      # 5) package everything into an “app-image” (directory with
      #    launcher + slimmed-down runtime)
      - name: Create self-contained image with jpackage
        run: |
          # copy artefacts that jpackage needs in one place
          mkdir -p dist/input
          cp target/PasswordManager.jar dist/input        # <-- adjust if the jar ends up elsewhere
          cp "$JAVAFX_SDK"/lib/*.jar dist/input

          jpackage \
            --dest dist \
            --type app-image \
            --name PasswordManager \
            --input dist/input \
            --main-jar PasswordManager.jar \
            --add-modules javafx.controls,javafx.fxml

          # turn the directory jpackage produced into a single tarball
          tar -C dist -czf PasswordManager-linux-x64.tgz PasswordManager

      # 6) make the tarball available on the “Actions ▸ Artifacts” tab
      - uses: actions/upload-artifact@v4
        with:
          name: passwordmanager-linux-x64
          path: PasswordManager-linux-x64.tgz
