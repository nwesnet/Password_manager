# File: .github/workflows/linux-package.yml
name: Build Linux package

on:
  workflow_dispatch:
  push:
    tags: ['v*']           # build automatically for tags like v1.2.3

jobs:
  linux:
    runs-on: ubuntu-latest

    steps:
    # 1) checkout sources
    - uses: actions/checkout@v4

    # 2) JDK 17 (contains jpackage + jlink)
    - name: Set up Temurin 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '17'
        cache: maven

    # 3) build runnable fat-JAR
    - name: Build runnable JAR
      run: mvn -B clean package -DskipTests

    # 4) download **JavaFX JMODs**
    - name: Download JavaFX 17 JMODs
      env:
        JFX_VERSION: 17.0.15
      run: |
        curl -L -o javafx-jmods.zip \
             https://download2.gluonhq.com/openjfx/${JFX_VERSION}/openjfx-${JFX_VERSION}_linux-x64_bin-jmods.zip
        unzip -q javafx-jmods.zip
        echo "JAVAFX_JMODS=$PWD/javafx-jmods-${JFX_VERSION}" >>"$GITHUB_ENV"

    # 5) package everything with jpackage
    - name: Create self-contained image with jpackage
      run: |
        # find the freshly built jar
        JAR_PATH=$(find target -maxdepth 1 -type f -name '*.jar' ! -name '*sources.jar' | head -n1)
        [ -n "$JAR_PATH" ] || { echo "::error ::No JAR found in target/"; exit 1; }
        JAR_FILE=$(basename "$JAR_PATH")

        # jpackage: build app-image in dist/PasswordManager
        jpackage \
          --dest dist \
          --type app-image \
          --name PasswordManager \
          --input target \
          --main-jar "$JAR_FILE" \
          --module-path "$JAVAFX_JMODS" \
          --add-modules javafx.controls,javafx.fxml

        # one easy-to-download archive
        tar -C dist -czf dist/PasswordManager-linux-x64.tgz PasswordManager

    # 6) upload artefact
    - name: Upload packaged app
      uses: actions/upload-artifact@v4
      with:
        name: passwordmanager-linux-x64
        path: dist/PasswordManager-linux-x64.tgz
